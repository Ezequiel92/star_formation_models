/*******************************************************************************************
* Jacobian for the model 007 calculated with Wolfram Language
* and adapted for its use with the Boost odeint library.
*******************************************************************************************/

struct jacobian
{
    template <class State, class Matrix>
    void operator()(const State &y, Matrix &J, const double &t, State &dfdt)
    {
        (void)(t);

		J(0,0) = -13.51351351*y[0]*(y[1] + y[0] + y[2]) - 13.51351351*y[0]*(y[1] + y[0] + y[2] + y[4]) - 13.51351351*(y[1] + y[0] + y[2])*(y[1] + y[0] + y[2] + y[4]);
		J(0,1) = -13.51351351*y[0]*(y[1] + y[0] + y[2]) - 13.51351351*y[0]*(y[1] + y[0] + y[2] + y[4]);
		J(0,2) = 367.4884615 - 13.51351351*y[0]*(y[1] + y[0] + y[2]) - 13.51351351*y[0]*(y[1] + y[0] + y[2] + y[4]);
		J(0,3) = 0;
		J(0,4) = -13.51351351*y[0]*(y[1] + y[0] + y[2]);

		J(1,0) = 13.51351351*y[0]*(y[1] + y[0] + y[2]) + 13.51351351*y[0]*(y[1] + y[0] + y[2] + y[4]) + 13.51351351*(y[1] + y[0] + y[2])*(y[1] + y[0] + y[2] + y[4]) + (2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4])*y[3])/(y[1] + y[0] + y[2]) - 2.777777778*y[1]*(y[1] + y[0] + y[2])*(0.0000134 + y[3]/(y[1] + y[0] + y[2])) - 2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4])*(0.0000134 + y[3]/(y[1] + y[0] + y[2]));
		J(1,1) = 13.51351351*y[0]*(y[1] + y[0] + y[2]) + 13.51351351*y[0]*(y[1] + y[0] + y[2] + y[4]) + (2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4])*y[3])/(y[1] + y[0] + y[2]) - 2.777777778*y[1]*(y[1] + y[0] + y[2])*(0.0000134 + y[3]/(y[1] + y[0] + y[2])) - 2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4])*(0.0000134 + y[3]/(y[1] + y[0] + y[2])) - 2.777777778*(y[1] + y[0] + y[2])*(y[1] + y[0] + y[2] + y[4])*(0.0000134 + y[3]/(y[1] + y[0] + y[2]));
		J(1,2) = -220.9076923 + 13.51351351*y[0]*(y[1] + y[0] + y[2]) + 13.51351351*y[0]*(y[1] + y[0] + y[2] + y[4]) + (2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4])*y[3])/(y[1] + y[0] + y[2]) - 2.777777778*y[1]*(y[1] + y[0] + y[2])*(0.0000134 + y[3]/(y[1] + y[0] + y[2])) - 2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4])*(0.0000134 + y[3]/(y[1] + y[0] + y[2]));
		J(1,3) = -2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4]);
		J(1,4) = 13.51351351*y[0]*(y[1] + y[0] + y[2]) - 2.777777778*y[1]*(y[1] + y[0] + y[2])*(0.0000134 + y[3]/(y[1] + y[0] + y[2]));

		J(2,0) = (-2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4])*y[3])/(y[1] + y[0] + y[2]) + 2.777777778*y[1]*(y[1] + y[0] + y[2])*(0.0000134 + y[3]/(y[1] + y[0] + y[2])) + 2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4])*(0.0000134 + y[3]/(y[1] + y[0] + y[2]));
		J(2,1) = (-2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4])*y[3])/(y[1] + y[0] + y[2]) + 2.777777778*y[1]*(y[1] + y[0] + y[2])*(0.0000134 + y[3]/(y[1] + y[0] + y[2])) + 2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4])*(0.0000134 + y[3]/(y[1] + y[0] + y[2])) + 2.777777778*(y[1] + y[0] + y[2])*(y[1] + y[0] + y[2] + y[4])*(0.0000134 + y[3]/(y[1] + y[0] + y[2]));
		J(2,2) = -146.8961538 - (2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4])*y[3])/(y[1] + y[0] + y[2]) + 2.777777778*y[1]*(y[1] + y[0] + y[2])*(0.0000134 + y[3]/(y[1] + y[0] + y[2])) + 2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4])*(0.0000134 + y[3]/(y[1] + y[0] + y[2]));
		J(2,3) = 2.777777778*y[1]*(y[1] + y[0] + y[2] + y[4]);
		J(2,4) = 2.777777778*y[1]*(y[1] + y[0] + y[2])*(0.0000134 + y[3]/(y[1] + y[0] + y[2]));

		J(3,0) = (0.3846153846*y[2]*y[3])/pow(y[1] + y[0] + y[2],2);
		J(3,1) = (0.3846153846*y[2]*y[3])/pow(y[1] + y[0] + y[2],2);
		J(3,2) = (0.3846153846*y[2]*y[3])/pow(y[1] + y[0] + y[2],2) + 0.3846153846*(0.0162 - (1.*y[3])/(y[1] + y[0] + y[2]));
		J(3,3) = (-0.3846153846*y[2])/(y[1] + y[0] + y[2]);
		J(3,4) = 0;

		J(4,0) = 0;
		J(4,1) = 0;
		J(4,2) = 0.3153846154;
		J(4,3) = 0;
		J(4,4) = 0;

		dfdt[0] = 0;
		dfdt[1] = 0;
		dfdt[2] = 0;
		dfdt[3] = 0;
		dfdt[4] = 0;
    }
};