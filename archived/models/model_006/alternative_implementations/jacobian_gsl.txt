/*******************************************************************************************
* Jacobian for the model 006 calculated with Wolfram Language 
* and adapted for its use with the GSL library.
*******************************************************************************************/

int jacobian(double t, const double y[], double *dfdy, double dfdt[], void *params)
{
	(void)(t);

	double g = *(double *)params;

	gsl_matrix_view dfdy_mat = gsl_matrix_view_array(dfdy, 5, 5);
	gsl_matrix * m = &dfdy_mat.matrix;

	gsl_matrix_set(m, 0, 0, -13.509648*pow(g,2)*(1. + y[3]));
	gsl_matrix_set(m, 0, 1, 0);
	gsl_matrix_set(m, 0, 2, 367.4884615);
	gsl_matrix_set(m, 0, 3, -13.509648*pow(g,2)*y[0]);
	gsl_matrix_set(m, 0, 4, 0);

	gsl_matrix_set(m, 1, 0, 13.509648*pow(g,2)*(1. + y[3]));
	gsl_matrix_set(m, 1, 1, -2.790447761*pow(g,2)*(0.0000134 + y[3])*(1. + y[3]));
	gsl_matrix_set(m, 1, 2, -220.9076923);
	gsl_matrix_set(m, 1, 3, 13.509648*pow(g,2)*y[0] - 2.790447761*pow(g,2)*y[1]*(0.0000134 + y[3]) - 2.790447761*pow(g,2)*y[1]*(1. + y[3]));
	gsl_matrix_set(m, 1, 4, 0);

	gsl_matrix_set(m, 2, 0, 0);
	gsl_matrix_set(m, 2, 1, 2.790447761*pow(g,2)*(0.0000134 + y[3])*(1. + y[3]));
	gsl_matrix_set(m, 2, 2, -146.8961538);
	gsl_matrix_set(m, 2, 3, 2.790447761*pow(g,2)*y[1]*(0.0000134 + y[3]) + 2.790447761*pow(g,2)*y[1]*(1. + y[3]));
	gsl_matrix_set(m, 2, 4, 0);

	gsl_matrix_set(m, 3, 0, 0);
	gsl_matrix_set(m, 3, 1, 0);
	gsl_matrix_set(m, 3, 2, 0.3846153846*(0.0162 - 1.*y[3]));
	gsl_matrix_set(m, 3, 3, -0.3846153846*y[2]);
	gsl_matrix_set(m, 3, 4, 0);

	gsl_matrix_set(m, 4, 0, 0);
	gsl_matrix_set(m, 4, 1, 0);
	gsl_matrix_set(m, 4, 2, 0.3153846154);
	gsl_matrix_set(m, 4, 3, 0);
	gsl_matrix_set(m, 4, 4, 0);

	dfdt[0] = 0;
	dfdt[1] = 0;
	dfdt[2] = 0;
	dfdt[3] = 0;
	dfdt[4] = 0;

	return GSL_SUCCESS;
};