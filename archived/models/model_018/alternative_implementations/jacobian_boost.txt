/*******************************************************************************************
* Jacobian for the model 018 calculated with Wolfram Language
* and adapted for its use with the Boost odeint library.
*******************************************************************************************/

struct jacobian
{
    template <class State, class Matrix>
    void operator()(const State &y, Matrix &J, const double &t, State &dfdt)
    {
        (void)(t);

		J(0,0) = -660066.0066*tot0*y[0] + 0.3846153846*y[2]*(y[0]/pow(y[1] + y[0] + y[2] + y[3],2) - 1./(y[1] + y[0] + y[2] + y[3]));
		J(0,1) = (0.3846153846*y[0]*y[2])/pow(y[1] + y[0] + y[2] + y[3],2);
		J(0,2) = (0.3846153846*y[0]*y[2])/pow(y[1] + y[0] + y[2] + y[3],2) + 0.3846153846*(955.4538 - (1.*y[0])/(y[1] + y[0] + y[2] + y[3]));
		J(0,3) = (0.3846153846*y[0]*y[2])/pow(y[1] + y[0] + y[2] + y[3],2);
		J(0,4) = 0;

		J(1,0) = 660066.0066*tot0*y[0] + (0.3846153846*y[1]*y[2])/pow(y[1] + y[0] + y[2] + y[3],2) + (11441.6476*tot0*y[1]*(y[1] + y[2])*y[3])/pow(y[1] + y[0] + y[2] + y[3],2);
		J(1,1) = (11441.6476*tot0*y[1]*(y[1] + y[2])*y[3])/pow(y[1] + y[0] + y[2] + y[3],2) + 0.3846153846*y[2]*(y[1]/pow(y[1] + y[0] + y[2] + y[3],2) - 1./(y[1] + y[0] + y[2] + y[3])) - 11441.6476*tot0*y[1]*(0.0000134 + y[3]/(y[1] + y[0] + y[2] + y[3])) - 11441.6476*tot0*(y[1] + y[2])*(0.0000134 + y[3]/(y[1] + y[0] + y[2] + y[3]));
		J(1,2) = (0.3846153846*y[1]*y[2])/pow(y[1] + y[0] + y[2] + y[3],2) + (11441.6476*tot0*y[1]*(y[1] + y[2])*y[3])/pow(y[1] + y[0] + y[2] + y[3],2) + 0.3846153846*(-574.36 - (1.*y[1])/(y[1] + y[0] + y[2] + y[3])) - 11441.6476*tot0*y[1]*(0.0000134 + y[3]/(y[1] + y[0] + y[2] + y[3]));
		J(1,3) = (0.3846153846*y[1]*y[2])/pow(y[1] + y[0] + y[2] + y[3],2) - 11441.6476*tot0*y[1]*(y[1] + y[2])*((-1.*y[3])/pow(y[1] + y[0] + y[2] + y[3],2) + 1/(y[1] + y[0] + y[2] + y[3]));
		J(1,4) = 0;

		J(2,0) = (0.3846153846*pow(y[2],2))/pow(y[1] + y[0] + y[2] + y[3],2) - (11441.6476*tot0*y[1]*(y[1] + y[2])*y[3])/pow(y[1] + y[0] + y[2] + y[3],2);
		J(2,1) = (0.3846153846*pow(y[2],2))/pow(y[1] + y[0] + y[2] + y[3],2) - (11441.6476*tot0*y[1]*(y[1] + y[2])*y[3])/pow(y[1] + y[0] + y[2] + y[3],2) + 11441.6476*tot0*y[1]*(0.0000134 + y[3]/(y[1] + y[0] + y[2] + y[3])) + 11441.6476*tot0*(y[1] + y[2])*(0.0000134 + y[3]/(y[1] + y[0] + y[2] + y[3]));
		J(2,2) = (-11441.6476*tot0*y[1]*(y[1] + y[2])*y[3])/pow(y[1] + y[0] + y[2] + y[3],2) - 0.3846153846*y[2]*((-1.*y[2])/pow(y[1] + y[0] + y[2] + y[3],2) + 1/(y[1] + y[0] + y[2] + y[3])) - 0.3846153846*(380.93 + y[2]/(y[1] + y[0] + y[2] + y[3])) + 11441.6476*tot0*y[1]*(0.0000134 + y[3]/(y[1] + y[0] + y[2] + y[3]));
		J(2,3) = (0.3846153846*pow(y[2],2))/pow(y[1] + y[0] + y[2] + y[3],2) + 11441.6476*tot0*y[1]*(y[1] + y[2])*((-1.*y[3])/pow(y[1] + y[0] + y[2] + y[3],2) + 1/(y[1] + y[0] + y[2] + y[3]));
		J(2,4) = 0;

		J(3,0) = (0.3846153846*y[2]*y[3])/pow(y[1] + y[0] + y[2] + y[3],2);
		J(3,1) = (0.3846153846*y[2]*y[3])/pow(y[1] + y[0] + y[2] + y[3],2);
		J(3,2) = (0.3846153846*y[2]*y[3])/pow(y[1] + y[0] + y[2] + y[3],2) + 0.3846153846*(0.0162 - (1.*y[3])/(y[1] + y[0] + y[2] + y[3]));
		J(3,3) = 0.3846153846*y[2]*(y[3]/pow(y[1] + y[0] + y[2] + y[3],2) - 1./(y[1] + y[0] + y[2] + y[3]));
		J(3,4) = 0;

		J(4,0) = 0;
		J(4,1) = 0;
		J(4,2) = 0.3153846154;
		J(4,3) = 0;
		J(4,4) = 0;

		dfdt[0] = 0;
		dfdt[1] = 0;
		dfdt[2] = 0;
		dfdt[3] = 0;
		dfdt[4] = 0;
    }
};